{"version":3,"sources":["Pages/Profile/profile.module.scss","Pages/Skills/skills.module.scss","Pages/Login/login.module.scss","Redux/Action/action.types.js","Redux/Reducer/reducer.js","Redux/store.js","Pages/Login/login.jsx","Redux/Action/action.js","Pages/Skills/skills.jsx","Pages/Profile/profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TYPES","SET_SELECTED_SKILLS_TO_STORE","SET_DETAILS_TO_STORE","intialState","details","selectedSkills","Profile","state","action","type","actionTypes","payload","store","createStore","composeWithDevTools","Login","history","useHistory","dispatch","useDispatch","useState","email","setEmail","firstName","setFirstName","lastName","setLastName","handleSubmit","localStorage","setItem","JSON","stringify","push","className","styles","container","Paper","gridWrapper","elevation","Grid","spacing","justifyContent","gridContainer","item","xs","TextField","placeholder","label","variant","name","value","onChange","e","target","fullWidth","Button","onClick","color","useStyles","makeStyles","theme","root","padding","tableCellHeader","backgroundColor","minWidth","visuallyHidden","border","clip","height","margin","overflow","position","top","width","Skills","classes","skills","setSkills","selected","setSelected","setSelectedSkills","skillError","setSkillError","errorType","setErrorType","useEffect","fetch","then","res","json","data","console","log","catch","err","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","handleNextBtnClick","header","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","event","reason","autoHideDuration","snackbar","paper","TableContainer","component","Table","table","TableHead","TableRow","TableCell","align","slice","map","isItemSelected","id","indexOf","TableBody","selectedIndex","newSelected","concat","newSkills","d","handleClick","hover","role","tabIndex","style","cursor","skillName","colSpan","src","alt","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","useSelector","parse","getItem","borderRadius","detailsDiv","textAlign","fontSize","fontWeight","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f90811ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2eYGH\",\"header\":\"profile_header__3Mho5\",\"paper\":\"profile_paper__3pruc\",\"detailsDiv\":\"profile_detailsDiv__vwTr_\",\"skills\":\"profile_skills__35vLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"skills_container__2u-W5\",\"header\":\"skills_header__3rNrg\",\"snackbar\":\"skills_snackbar__7LtWL\",\"paper\":\"skills_paper__3xTl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3J1z8\",\"gridWrapper\":\"login_gridWrapper__2DiNq\",\"gridContainer\":\"login_gridContainer__LT6YN\"};","const TYPES = {\n  SET_SELECTED_SKILLS_TO_STORE: \"SET_SELECTED_SKILLS_TO_STORE\",\n  SET_DETAILS_TO_STORE: \"SET_DETAILS_TO_STORE\",\n};\n\nexport default TYPES;\n","import actionTypes from \"../Action/action.types\";\n\nconst intialState = {\n  details: null,\n  selectedSkills: null,\n};\nconst Profile = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_DETAILS_TO_STORE:\n      return { ...state, details: action.payload };\n    case actionTypes.SET_SELECTED_SKILLS_TO_STORE:\n      return { ...state, selectedSkills: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default Profile;\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport Profile from \"./Reducer/reducer\";\n\nconst store = createStore(Profile, composeWithDevTools());\nexport default store;\n","import React, { useState } from \"react\";\nimport { Grid, Button, TextField, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setDetailsToStore } from \"../../Redux/Action/action\";\nimport styles from \"./login.module.scss\";\n\nexport default function Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n  };\n\n  const handleSubmit = () => {\n    dispatch(setDetailsToStore({ email, firstName, lastName }));\n    localStorage.setItem(\n      \"details\",\n      JSON.stringify({ email, firstName, lastName })\n    );\n    history.push(\"/select-skill\");\n    resetForm();\n  };\n  return (\n    <div className={styles.container}>\n      <Paper className={styles.gridWrapper} elevation={3}>\n        <Grid\n          container\n          spacing={4}\n          justifyContent='center'\n          className={styles.gridContainer}\n        >\n          <Grid item xs={12}>\n            <TextField\n              placeholder='Your Email'\n              label='Email'\n              variant='outlined'\n              type='email'\n              name='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              placeholder='Your First Name'\n              label='First Name'\n              variant='outlined'\n              type='text'\n              name='firstName'\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              placeholder='Your Last Name'\n              label='Last Name'\n              variant='outlined'\n              type='text'\n              name='lastName'\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              onClick={() => handleSubmit()}\n              fullWidth\n              variant='contained'\n              color='secondary'\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import actionTypes from \"./action.types\";\n\nexport const setSelectedSkillsToStore = (data) => ({\n  type: actionTypes.SET_SELECTED_SKILLS_TO_STORE,\n  payload: data,\n});\n\nexport const setDetailsToStore = (data) => ({\n  type: actionTypes.SET_DETAILS_TO_STORE,\n  payload: data,\n});\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableHead,\n  TableRow,\n  Button,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectedSkillsToStore } from \"../../Redux/Action/action\";\nimport styles from \"./skills.module.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0 15px\",\n  },\n  tableCellHeader: {\n    backgroundColor: \"#252525\",\n    color: \"#fff\",\n    minWidth: \"35px\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\nexport default function Skills() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [skills, setSkills] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [selectedSkills, setSelectedSkills] = useState([]);\n  const [skillError, setSkillError] = useState(false);\n  const [errorType, setErrorType] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://fechallenge.dev.bhyve.io/skills\")\n      .then((res) => res.json())\n      .then((data) => {\n        setSkills(data);\n        console.log(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleClick = (event, item) => {\n    const selectedIndex = selected.indexOf(item.id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, item.id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n    const newSkills = newSelected.map((d) => skills[d - 1]);\n    setSelectedSkills(newSkills);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, skills.length - page * rowsPerPage);\n\n  const handleNextBtnClick = () => {\n    if (selectedSkills.length < 3) {\n      setErrorType(\"Select at least 3 skills!\");\n      setSkillError(true);\n      return;\n    } else if (selectedSkills.length > 8) {\n      setErrorType(\"You can select only 8 skills!\");\n      setSkillError(true);\n      return;\n    } else {\n      dispatch(setSelectedSkillsToStore(selectedSkills));\n      localStorage.setItem(\"selectedSkills\", JSON.stringify(selectedSkills));\n      history.push(\"/profile\");\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSkillError(false);\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>Skills List</div>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={skillError}\n        onClose={handleClose}\n        autoHideDuration={3000}\n      >\n        <Paper elevation={5} className={styles.snackbar}>\n          {errorType}\n        </Paper>\n      </Snackbar>\n      <Paper elevation={3} className={styles.paper}>\n        <TableContainer component={Paper}>\n          <Table\n            className={classes.table}\n            aria-labelledby='tableTitle'\n            aria-label='enhanced table'\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.tableCellHeader} align='center'>\n                  Skills\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            {skills\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((item) => {\n                const isItemSelected = isSelected(item.id);\n                return (\n                  <TableBody>\n                    <TableRow\n                      onClick={(event) => handleClick(event, item)}\n                      key={item.id}\n                      hover\n                      role='checkbox'\n                      tabIndex={-1}\n                      selected={isItemSelected}\n                      aria-checked={isItemSelected}\n                    >\n                      <TableCell align='center' style={{ cursor: \"pointer\" }}>\n                        <span>{item.skillName}</span>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                );\n              })}\n            {skills.length === 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell align='center' colSpan={8}>\n                  <img\n                    src='https://s2.svgbox.net/loaders.svg?ic=elastic-spinner&color=000000'\n                    width='32'\n                    height='32'\n                    alt='loader'\n                  />\n                </TableCell>\n              </TableRow>\n            )}\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component='div'\n          count={skills.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n      <Button\n        variant='contained'\n        color='secondary'\n        style={{ margin: \"2rem 0\" }}\n        onClick={() => handleNextBtnClick()}\n      >\n        Next\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./profile.module.scss\";\n\nexport default function Profile() {\n  const details =\n    useSelector((state) => state.details) ||\n    JSON.parse(localStorage.getItem(\"details\"));\n  const selectedSkills =\n    useSelector((state) => state.selectedSkills) ||\n    JSON.parse(localStorage.getItem(\"selectedSkills\"));\n  return (\n    <div className={styles.container}>\n      <span className={styles.header}>Profile</span>\n      <Paper className={styles.paper} elevation={3}>\n        <div\n          style={{\n            border: \"1px solid red\",\n            borderRadius: \"5px\",\n            padding: \"1.5rem\",\n          }}\n        >\n          <Grid container spacing={3} className={styles.detailsDiv}>\n            <Grid item xs={6}>\n              <label>Email</label>\n            </Grid>\n            <Grid item xs={6}>\n              <span>{details?.email}</span>\n            </Grid>\n            <Grid item xs={6}>\n              <label>First Name</label>\n            </Grid>\n            <Grid item xs={6}>\n              <span>{details?.firstName}</span>\n            </Grid>\n            <Grid item xs={6}>\n              <label>Last Name</label>\n            </Grid>\n            <Grid item xs={6}>\n              <span>{details?.lastName}</span>\n            </Grid>\n            <Grid item xs={12}></Grid>\n          </Grid>\n          <Grid container spacing={2} justifyContent='center'>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              <span style={{ fontSize: \"1.3rem\", fontWeight: \"700\" }}>\n                Skills\n              </span>\n            </Grid>\n            {selectedSkills.map((item) => (\n              <Grid item>\n                <div className={styles.skills}>{item.skillName}</div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n","import { Switch, Route } from \"react-router-dom\";\nimport Login from \"./Pages/Login/login\";\nimport Skills from \"./Pages/Skills/skills\";\nimport Profile from \"./Pages/Profile/profile\";\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={Login} />\n      <Route path='/select-skill' component={Skills} />\n      <Route path='/profile' component={Profile} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}